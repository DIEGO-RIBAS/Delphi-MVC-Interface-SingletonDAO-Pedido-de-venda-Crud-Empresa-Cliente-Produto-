unit uDao.ConexaoSingleton;

interface

   uses
     System.SysUtils,
     FireDAC.Comp.Client,
     FireDAC.DApt,
     FireDAC.Stan.Def,
     FireDAC.Phys.SQLiteDef,
     FireDAC.Phys.SQLite;

    type

    TConexaoSingleton = class

      private
         FConexao : TFDConnection;
      public
         property Conexao: TFDConnection read FConexao write FConexao;
         class function GetInstance : TConexaoSingleton;

         constructor Create;
    end;

implementation

  Var
    ConexaoSingleton : TConexaoSingleton;

{ TConexaoSingleton }

constructor TConexaoSingleton.Create;
begin
  inherited;

  FConexao := TFDConnection.Create(nil);

  with FConexao do
  begin
    DriverName      := 'SQLite';
    Params.Database := ExtractFilePath(ParamStr(0))+'Pedidos-Venda.DB' ;// 'D:\Delphi\Testes\Pedidos-Cliente-Produtos\BD\Pedidos-Venda.DB';
  end;

  try
    FConexao.Connected := True;
  except on E : Exception do
     begin
       raise Exception.Create('Erro na conexão :'+E.Message);
     end;
  end;
end;

class function TConexaoSingleton.GetInstance: TConexaoSingleton;
begin
  if not Assigned(ConexaoSingleton) then
    ConexaoSingleton := TConexaoSingleton.Create;

  Result := ConexaoSingleton;
end;

end.
